name: Android emulator
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  ANDROID_ARCH: x86_64
  ANDROID_TARGET: google_apis_playstore
  API_LEVEL: 33
  ANDROID_BUILD_TOOLS_VERSION: 33.0.2
  ANDROID_SDK_PACKAGES: system-images;android-33;google_apis_playstore;x86_64 platforms;android-33 build-tools;33.0.2 platform-tools emulator
  EMULATOR_TIMEOUT: 1000
  EMULATOR_NAME: nexus

jobs:
  playwright-emulator:
    timeout-minutes: 20
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
      - name: Set up Python 3.10ss
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - run: python3 --version
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          check-latest: true
      - run: node --version
      - run: npm --version
      - uses: actions/checkout@v4


      - name: Add avdmanager and sdkmanager to system PATH
        run: |
          echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/${{ env.ANDROID_BUILD_TOOLS_VERSION }}" >> $GITHUB_PATH

      - name: Install Sdk
        run: |
          yes Y | sdkmanager --licenses
          sdkmanager --install ${ANDROID_SDK_PACKAGES}

      - name: Build emulator
        run: |
          echo "no" | avdmanager --verbose create avd --force -n $EMULATOR_NAME --abi "${ANDROID_TARGET}/${ANDROID_ARCH}" -k "system-images;android-${API_LEVEL};${ANDROID_TARGET};${ANDROID_ARCH}"

      - name: Launch emulator
        run: |
          chmod +x ./start_emu_headless.sh
          EMULATOR_TIMEOUT=$EMULATOR_TIMEOUT EMULATOR_NAME=$EMULATOR_NAME ./start_emu_headless.sh

      - name: ADB Version
        run: |
          adb --version
          adb kill-server
          adb start-server
          adb devices
          adb shell getprop ro.build.version.release

      - name: Install Python Libraries
        run: |
          python3 -m pip install robotframework
          python3 -m pip install robotframework-appiumlibrary
          python3 -m pip install robotframework-seleniumlibrary
          python3 -m pip install webdriver-manager

      - name: Install Appium & Run
        run:  |
          chmod +x ./runappium.sh
          ./runappium.sh
          
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: reports
          path: reports
